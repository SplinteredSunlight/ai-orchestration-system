name: ai-orchestration-system
version: 1.0.0

services:
  backend:
    image: cgr.dev/chainguard/python:latest-dev
    workdir: /app
    command: ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_PERSIST_DIRECTORY=/app/data/chromadb
    volumes:
      - ./backend:/app
      - ./data/chromadb:/app/data/chromadb
    ports:
      - "8000:8000"
    depends_on:
      - redis

  celery_worker:
    image: cgr.dev/chainguard/python:latest-dev
    workdir: /app
    command: ["celery", "-A", "app.core.celery_app", "worker", "--loglevel=info"]
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CHROMA_PERSIST_DIRECTORY=/app/data/chromadb
    volumes:
      - ./backend:/app
      - ./data/chromadb:/app/data/chromadb
    depends_on:
      - redis
      - backend

  celery_beat:
    image: cgr.dev/chainguard/python:latest-dev
    workdir: /app
    command: ["celery", "-A", "app.core.celery_app", "beat", "--loglevel=info"]
    environment:
      - PYTHONPATH=/app
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - backend

  redis:
    image: cgr.dev/chainguard/redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  frontend:
    image: cgr.dev/chainguard/node:latest-dev
    workdir: /app
    command: ["npm", "start"]
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  redis_data:
    driver: local

security:
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
